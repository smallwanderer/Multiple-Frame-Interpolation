    # Copyright 2022 Google LLC

    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at

    #     https://www.apache.org/licenses/LICENSE-2.0

    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # ==============================================================================
    model.name = 'film_net'

    # Option.py Model Parameter
    film_net.pyramid_levels = 4 # 7
    film_net.fusion_pyramid_levels = 3 # 5
    film_net.specialized_levels = 2 # 3
    film_net.sub_levels = 2 # 4
    film_net.flow_convs = [3, 3, 3] # [3, 3, 3, 3]
    film_net.flow_filters = [32, 64, 128] # [32, 64, 128, 256]
    film_net.filters = 48 # 64

    # Learning rate schedule and optimizer settings
    training.learning_rate = 0.001 # 0.0001
    training.learning_rate_decay_steps = 25000 # 750000
    training.learning_rate_decay_rate = 0.464158
    training.learning_rate_staircase = True
    training.num_steps = 100000 # 3000000

    # in the sweep
    training_dataset.file = 'C:\\Users\\McGra\\frame-interpolation\\datasets\\moving_mnist_tfrecord\\tfrecord_10_semi\\mnist-tfrecord_semi_train@1'
    training_dataset.batch_size = 8
    training_dataset.crop_sizes = 16 # 256

    # Evaluate Datasets
    eval_datasets.files = ['C:\\Users\\McGra\\frame-interpolation\\datasets\\moving_mnist_tfrecord\\tfrecord_10_semi\\mnist-tfrecord_semi_eval@1']
    eval_datasets.names = ['mnist']
    eval_datasets.batch_size = 1
    eval_datasets.max_examples = -1 # -1

    data_augmentation.names = ['random_image_rot90', 'random_flip', 'random_rotate', 'random_reverse']

    # Loss Functions
    training_losses.loss_names = ['l1']
    training_losses.loss_weights = [1.0]

    test_losses.loss_names = ['l1', 'psnr', 'ssim']
    test_losses.loss_weights = [1.0, 1.0, 1.0]

